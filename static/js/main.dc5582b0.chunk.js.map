{"version":3,"sources":["Business.js","Work.js","Table.js","App.js","reportWebVitals.js","index.js"],"names":["Business","this","props","date","Fquantity","key","Component","Work","dates","map","i","FPrice","Weight","Table","state","ex","fetch","then","res","json","data","setState","body","intraDayTradeHistoryList","PHitems","filter","elem","conract","substr","PHDates","element","distinctDates","Set","mainList","length","price","quantity","num","j","obj","push","a","toFixed","className","scope","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dc5582b0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nexport default class Business extends Component {\r\n  render() {\r\n    return (\r\n      <div key={this.props.key}>\r\n        <tr>{this.props.date}</tr>\r\n        <tr>{this.props.Fquantity}</tr>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Business from \"./Business\";\r\n\r\nexport default class Work extends Component {\r\n  render() {\r\n    return (\r\n      <tr>\r\n        <td>\r\n          {this.props.dates.map((date, i) => (\r\n            <Business key={i} date={date} />\r\n          ))}\r\n        </td>\r\n\r\n        <td>\r\n          {this.props.Fquantity.map((Fquantity, i) => (\r\n            <Business key={i} date={Fquantity} />\r\n          ))}\r\n        </td>\r\n\r\n        <td>\r\n          {this.props.FPrice.map((FPrice, i) => (\r\n            <Business key={i} date={FPrice} />\r\n          ))}\r\n        </td>\r\n\r\n        <td>\r\n          {this.props.Weight.map((Weight, i) => (\r\n            <Business key={i} date={Weight} />\r\n          ))}\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Work from \"./Work\";\r\n\r\nexport default class Table extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ex: [],\r\n      dates: [],\r\n      Fquantity: [],\r\n      FPrice: [],\r\n      Weight: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://seffaflik.epias.com.tr/transparency/service/market/intra-day-trade-history?endDate=2020-02-26&startDate=2020-02-25\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        this.setState({ ex: data.body.intraDayTradeHistoryList });\r\n        const PHitems = this.state.ex.filter(\r\n          (elem) => elem.conract.substr(0, 2) === \"PH\"\r\n        );\r\n        const PHDates = PHitems.map((element) => element.conract.substr(2));\r\n        var distinctDates = [...new Set(PHDates)];\r\n\r\n        var mainList = [];\r\n        for (var i = 0; i < distinctDates.length; i++) {\r\n          var price = 0;\r\n          var quantity = 0;\r\n          var num = 0;\r\n          for (var j = 0; j < PHDates.length; j++) {\r\n            if (distinctDates[i] === PHDates[j]) {\r\n              num += 1;\r\n              price += (PHitems[j].price * PHitems[j].quantity) / 10;\r\n              quantity += PHitems[j].quantity / 10;\r\n            }\r\n          }\r\n          var obj = {\r\n            conract: distinctDates[i],\r\n            price: price,\r\n            quantity: quantity,\r\n            num: num,\r\n          };\r\n          mainList.push(obj);\r\n        }\r\n\r\n        const dates = this.state.dates;\r\n        const Fquantity = this.state.Fquantity;\r\n        const FPrice = this.state.FPrice;\r\n        const Weight = this.state.Weight;\r\n\r\n        for (var a = 0; a < mainList.length; a++) {\r\n          var date =\r\n            mainList[a].conract.substr(4, 2) +\r\n            \".\" +\r\n            mainList[a].conract.substr(2, 2) +\r\n            \".20\" +\r\n            mainList[a].conract.substr(0, 2) +\r\n            \" \" +\r\n            mainList[a].conract.substr(6, 2) +\r\n            \":00\";\r\n\r\n          dates.push(date);\r\n          Fquantity.push(mainList[a].quantity.toFixed(2));\r\n          FPrice.push(mainList[a].price.toFixed(2));\r\n          Weight.push(\r\n            ((mainList[a].price * mainList[a].num) / PHDates.length).toFixed(2)\r\n          );\r\n        }\r\n        this.setState({ FPrice });\r\n        this.setState({ dates });\r\n        this.setState({ Fquantity });\r\n        this.setState({ Weight });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Tarih</th>\r\n            <th scope=\"col\">Toplam Miktar</th>\r\n            <th scope=\"col\">Toplam Fiyat</th>\r\n            <th scope=\"col\">Ağırlıklı Ortalama Fiyat</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr></tr>\r\n          <Work\r\n            dates={this.state.dates}\r\n            Fquantity={this.state.Fquantity}\r\n            FPrice={this.state.FPrice}\r\n            Weight={this.state.Weight}\r\n          />\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport Table from \"./Table\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n//console.log(this.props.object)\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}